"use strict";(self.webpackChunkatelier=self.webpackChunkatelier||[]).push([[478],{1782:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"development/ssh-to-wsl","title":"Enabling SSH Access to Windows Subsytem for Linux (WSL)","description":"WSL provides a way to run a Linux environment within Windows, which can be useful for software development, especially when installing a full Linux system isn\u2019t an option. Still, if Windows isn\'t exactly your favourite place to code and this kind of setup is inevitable, another workaround is to setup the WSL as a remote server and connect from your preferred development machine.","source":"@site/docs/development/ssh-to-wsl.md","sourceDirName":"development","slug":"/development/ssh-to-wsl","permalink":"/perpus/development/ssh-to-wsl","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"How-to Guide","permalink":"/perpus/tags/how-to-guide"},{"inline":true,"label":"WSL","permalink":"/perpus/tags/wsl"},{"inline":true,"label":"Windows","permalink":"/perpus/tags/windows"}],"version":"current","lastUpdatedAt":1745280000000,"frontMatter":{"tags":["How-to Guide","WSL","Windows"],"last_update":{"date":"2025-04-22T00:00:00.000Z"}},"sidebar":"docsSidebar","previous":{"title":"perpus","permalink":"/perpus/"}}');var i=s(6070),r=s(3763);const o={tags:["How-to Guide","WSL","Windows"],last_update:{date:new Date("2025-04-22T00:00:00.000Z")}},l="Enabling SSH Access to Windows Subsytem for Linux (WSL)",a={},d=[{value:"Enable SSH Server in WSL",id:"enable-ssh-server-in-wsl",level:3},{value:"Forward Windows Port to WSL",id:"forward-windows-port-to-wsl",level:3},{value:"Allow port in the Windows Firewall Host",id:"allow-port-in-the-windows-firewall-host",level:3},{value:"Connect Remotely via SSH",id:"connect-remotely-via-ssh",level:3},{value:"Optional: Create Startup Script",id:"optional-create-startup-script",level:3},{value:"Optional: Login with SSH Key",id:"optional-login-with-ssh-key",level:3}];function c(e){const n={blockquote:"blockquote",code:"code",h1:"h1",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"enabling-ssh-access-to-windows-subsytem-for-linux-wsl",children:"Enabling SSH Access to Windows Subsytem for Linux (WSL)"})}),"\n",(0,i.jsx)(n.p,{children:"WSL provides a way to run a Linux environment within Windows, which can be useful for software development, especially when installing a full Linux system isn\u2019t an option. Still, if Windows isn't exactly your favourite place to code and this kind of setup is inevitable, another workaround is to setup the WSL as a remote server and connect from your preferred development machine."}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"This assume WSL already installed, and preferrably with Ubuntu."}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"enable-ssh-server-in-wsl",children:"Enable SSH Server in WSL"}),"\n",(0,i.jsx)(n.p,{children:"First, install and configure the SSH Server:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo apt update && sudo apt install openssh-server -y\n"})}),"\n",(0,i.jsx)(n.p,{children:"Edit the ssh server config:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",metastring:'title="/etc/ssh/sshd_config.d/wsl.conf"',children:"Port 2222\nPasswordAuthentication yes\nPubkeyAuthentication yes\n"})}),"\n",(0,i.jsx)(n.p,{children:"This enable ssh in the port 2222, supporting password and key authentication methods."}),"\n",(0,i.jsx)(n.p,{children:"Then start the ssh service and enable it on startup:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo systemctl enable ssh\n"})}),"\n",(0,i.jsx)(n.h3,{id:"forward-windows-port-to-wsl",children:"Forward Windows Port to WSL"}),"\n",(0,i.jsx)(n.p,{children:"In PowerShell terminal as Administrator, run:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-powershell",children:"netsh interface portproxy add v4tov4 listenport=2222 listenaddress=0.0.0.0 connectport=2222 connectaddress=$(wsl hostname -I).trim()\n"})}),"\n",(0,i.jsxs)(n.p,{children:["With ",(0,i.jsx)(n.code,{children:"wsl hostname -I"})," it possible to make the ip discovery dynamic."]}),"\n",(0,i.jsx)(n.h3,{id:"allow-port-in-the-windows-firewall-host",children:"Allow port in the Windows Firewall Host"}),"\n",(0,i.jsx)(n.p,{children:"Still in PowerShell, add a firewall rule:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-powershell",children:'New-NetFirewallRule -DisplayName "WSL SSH Proxy" -Direction Inbound -LocalPort 2222 -Protocol TCP -Action Allow\n'})}),"\n",(0,i.jsx)(n.h3,{id:"connect-remotely-via-ssh",children:"Connect Remotely via SSH"}),"\n",(0,i.jsx)(n.p,{children:"After setup, the WSL instance should be accessible via SSH from another machine:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"ssh -p 2222 <wslusername>@<windowsip>\n"})}),"\n",(0,i.jsx)(n.h3,{id:"optional-create-startup-script",children:"Optional: Create Startup Script"}),"\n",(0,i.jsx)(n.p,{children:"To make WSL and port fowarding persist across reboots, create a simple script:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-powershell",metastring:'title="C:\\scripts\\wsl-portproxy.ps1"',children:"# clean up existing rule\nnetsh interface portproxy delete v4tov4 listenport=2222 listenaddress=0.0.0.0\n\n# get WSL IP + boot WSL at the same time\n$wslIp = (wsl hostname -I).trim()\n\n# port forward from Windows:2222 -> WSL:2222\nnetsh interface portproxy add v4tov4 listenport=2222 listenaddress=0.0.0.0 connectport=2222 connectaddress=$wslIp\n"})}),"\n",(0,i.jsx)(n.p,{children:"Then set it to run at startup in the task scheduler:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Open ",(0,i.jsx)(n.strong,{children:"Task Scheduler"})]}),"\n",(0,i.jsxs)(n.li,{children:["Click ",(0,i.jsx)(n.strong,{children:"Create Task"})]}),"\n",(0,i.jsxs)(n.li,{children:["General Tab: Set name, e.g ",(0,i.jsx)(n.code,{children:"WSL Port Forwarding"})," and check ",(0,i.jsx)(n.strong,{children:"Run with highest privileges"})]}),"\n",(0,i.jsxs)(n.li,{children:["Triggers Tab: New -> Begin the task ",(0,i.jsx)(n.strong,{children:"At startup"})]}),"\n",(0,i.jsxs)(n.li,{children:["Action Tab: New -> Start a program","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Program/script: ",(0,i.jsx)(n.code,{children:"powershell"})]}),"\n",(0,i.jsxs)(n.li,{children:["Add arguments: ",(0,i.jsx)(n.code,{children:'-ExecutionPolicy Bypass -File "C:\\scripts\\wsl-portproxy.ps1"'})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"optional-login-with-ssh-key",children:"Optional: Login with SSH Key"}),"\n",(0,i.jsx)(n.p,{children:"To enable key-based login, copy your SSH public key into the WSL instance:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"ssh-copy-id -i /path/to/privatekey -p 2222 <wslusername>@<windowsip>\n"})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},3763:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>l});var t=s(758);const i={},r=t.createContext(i);function o(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);